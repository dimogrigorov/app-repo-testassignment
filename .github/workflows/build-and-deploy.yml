name: Build and Deploy to AWS ECR

on:
  push:
    branches:
      - main  # Run when changes are pushed to main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Maven
        run: |
          mvn -version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your AWS region

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 479701439711.dkr.ecr.us-east-1.amazonaws.com

      - name: Auto-increment Version in `pom.xml`
        run: |
          mvn build-helper:parse-version versions:set \
            -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion} \
            -DgenerateBackupPoms=false

      - name: Build the Java Application
        run: |
          mvn clean package -DskipTests

      - name: Extract Version from `pom.xml`
        id: get_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Build and Tag Docker Image
        run: |
          docker build -t 479701439711.dkr.ecr.us-east-1.amazonaws.com/testassignment/my-spring-boot-repo:${{ env.VERSION }} .
          docker tag 479701439711.dkr.ecr.us-east-1.amazonaws.com/testassignment/my-spring-boot-repo:${{ env.VERSION }} 479701439711.dkr.ecr.us-east-1.amazonaws.com/testassignment/my-spring-boot-repo:latest

      - name: Push Docker Image to ECR
        run: |
          docker push 479701439711.dkr.ecr.us-east-1.amazonaws.com/testassignment/my-spring-boot-repo:${{ env.VERSION }}
          docker push 479701439711.dkr.ecr.us-east-1.amazonaws.com/testassignment/my-spring-boot-repo:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy with Helm
        run: |
          helm upgrade --install my-app ./helm-chart \
            --set image.repository=479701439711.dkr.ecr.us-east-1.amazonaws.com/testassignment/my-spring-boot-repo \
            --set image.tag=${{ env.VERSION }}

